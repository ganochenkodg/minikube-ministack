apiVersion: apps/v1
kind: Deployment
metadata:
  name: prod-app
  namespace: prod
  labels:
    app: prod-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: prod-app
  template:
    metadata:
      labels:
        app: prod-app
    spec:
      containers:
      - name: prod-app
        image: localhost:5000/myapp:master
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        - containerPort: 9991
        readinessProbe:
          httpGet:
            port: 3000
            path: /health
          initialDelaySeconds: 10
          periodSeconds: 15
          failureThreshold: 2
        livenessProbe:
          httpGet:
            port: 3000
            path: /liveness
          initialDelaySeconds: 20
          periodSeconds: 10
          failureThreshold: 3
        env:
        - name: ENVIRONMENT
          value: "prod"

---

kind: Service
apiVersion: v1
metadata:
  name: prod-app-upstream
  namespace: prod
spec:
  selector:
    app: prod-app
  ports:
    - port: 3000
      protocol: TCP
      targetPort: 3000
      name: main-upstream
    - port: 9991
      protocol: TCP
      targetPort: 9991
      name: metrics-upstream

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: prod-app-upstream
  namespace: prod
  annotations:
    nginx.ingress.kubernetes.io/app-root: /hello
    nginx.ingress.kubernetes.io/proxy-body-size: 4g
    nginx.ingress.kubernetes.io/server-snippet: |
      access_log /var/log/nginx/prod-app.access.log;
      error_log /var/log/nginx/prod-app.error.log;
      gzip on;
      gzip_disable "msie6";
      gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;
spec:
  rules:
  - host: prod.minikube
    http:
      paths:
      - path: /
        backend:
          serviceName: prod-app-upstream
          servicePort: 3000
